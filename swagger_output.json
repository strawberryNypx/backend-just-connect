{
  "openapi": "3.0.0",
  "info": {
    "version": "v1.0.0",
    "title": "JUSTCONNECT SWAGGER",
    "description": "Forum API"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": ""
    }
  ],
  "paths": {
    "/public/users/register": {
      "post": {
        "tags": ["Public user routes"],
        "description": "Register user. The password must be at least 8 characters long and contain letters and numbers.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": { "description": "User created" },
          "400": { "description": "Bad Request" },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/public/auth": {
      "post": {
        "tags": ["Public user routes"],
        "description": "User can login with email or username.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/public/users": {
      "get": {
        "tags": ["Public user routes"],
        "description": "List all users",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Optional name to filter users by",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number to retrieve",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of users per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 16
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/public/users/{id}": {
      "get": {
        "tags": ["Public user routes"],
        "description": "Get one user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": { "description": "Bad Request" }
        }
      }
    },
    "/users/my-profile": {
      "get": {
        "tags": ["Authenticated user routes"],
        "description": "Returns the logged user's profile",
        "responses": {
          "200": {
            "description": "User profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponse"
                }
              }
            }
          },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/change-password": {
      "put": {
        "tags": ["Authenticated user routes"],
        "description": "Change user password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": { "description": "Password changed successfully" },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/{id}": {
      "put": {
        "tags": ["Authenticated user routes"],
        "description": "Edit user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": { "description": "User updated" },
          "400": { "description": "Bad Request" },
          "404": { "description": "Not Found" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": ["Authenticated user routes"],
        "description": "Delete user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": { "description": "User was deleted" },
          "400": { "description": "Bad Request" },
          "404": { "description": "Not Found" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/posts": {
      "post": {
        "tags": ["Authenticated post routes"],
        "description": "Creates a new post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Post created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostResponse"
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/posts/{id}": {
      "delete": {
        "tags": ["Authenticated post routes"],
        "description": "Delete a post by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": { "description": "Post was deleted" },
          "404": { "description": "Not Found" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": ["Authenticated post routes"],
        "description": "Update a post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": { "description": "Post updated successfully" },
          "404": { "description": "Not Found" },
          "401": { "description": "Unauthorized" },
          "400": { "description": "Bad Request" }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/public/posts": {
      "get": {
        "tags": ["Public post routes"],
        "description": "List all posts",
        "responses": {
          "200": { "description": "OK" }
        }
      }
    },
    "/public/posts/user/{id}": {
      "get": {
        "tags": ["Public post routes"],
        "description": "List all posts by one user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "OK" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/public/posts/profile/{username}": {
      "get": {
        "tags": ["Public post routes"],
        "description": "Find all posts from user by their username",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": { "description": "OK" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/public/posts/{id}": {
      "get": {
        "tags": ["Public post routes"],
        "description": "Find a post by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": { "description": "OK" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/comments/post/{postId}": {
      "post": {
        "tags": ["Authenticated comment routes"],
        "description": "Creates a comment on a post",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Comment created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommentResponse"
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/comments/{id}": {
      "put": {
        "tags": ["Authenticated comment routes"],
        "description": "Updates a comment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Comment updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommentResponse"
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": ["Authenticated comment routes"],
        "description": "Deletes a comment",
        "responses": {
          "204": { "description": "Comment deleted" },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "RegisterRequest": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "username": { "type": "string" },
          "email": { "type": "string" },
          "password": {
            "type": "string",
            "minLength": 8,
            "description": "Password must be at least 8 characters long and contain letters and numbers."
          },
          "confirmPassword": { "type": "string" }
        },
        "required": ["name", "username", "email", "password", "confirmPassword"]
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": { "type": "string" },
          "username": { "type": "string" },
          "password": {
            "type": "string",
            "minLength": 8,
            "description": "Password must contain letters and numbers."
          }
        },
        "required": ["password"]
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": { "type": "string" },
          "id": { "type": "string", "format": "uuid" }
        }
      },
      "UserListResponse": {
        "items": {
          "type": "object",
          "properties": {
            "users": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": { "type": "string", "format": "uuid" },
                  "name": { "type": "string" },
                  "username": { "type": "string" },
                  "postCount": { "type": "integer" }
                }
              }
            },
            "totalPages": { "type": "integer" },
            "page": { "type": "integer" },
            "limit": { "type": "integer" }
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "username": { "type": "string" },
          "bio": { "type": "string", "nullable": true },
          "admin_user_block": { "type": "boolean" },
          "insta": { "type": "string", "nullable": true },
          "linkedin": { "type": "string", "nullable": true },
          "github": { "type": "string", "nullable": true },
          "posts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostResponse"
            }
          }
        }
      },
      "UserProfileResponse": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "username": { "type": "string" },
          "email": { "type": "string" },
          "bio": { "type": "string", "nullable": true },
          "role": { "type": "string" },
          "insta": { "type": "string", "nullable": true },
          "linkedin": { "type": "string", "nullable": true },
          "github": { "type": "string", "nullable": true },
          "admin_user_block": { "type": "boolean" },
          "posts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostResponse"
            }
          }
        }
      },
      "EditUserRequest": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "username": { "type": "string" },
          "email": { "type": "string" },
          "bio_description": { "type": "string" },
          "linkedin": { "type": "string" },
          "instagram": { "type": "string" },
          "github": { "type": "string" }
        },
        "required": false
      },
      "ChangePasswordRequest": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "minLength": 8,
            "description": "Current password must contain letters and numbers."
          },
          "newPassword": {
            "type": "string",
            "minLength": 8,
            "description": "New password must and contain letters and numbers."
          },
          "confirmPassword": {
            "type": "string",
            "minLength": 8,
            "description": "Confirm new password must match new password."
          }
        },
        "required": ["password", "newPassword", "confirmPassword"]
      },
      "CreatePostRequest": {
        "type": "object",
        "properties": {
          "title": { "type": "string" },
          "description": { "type": "string" }
        },
        "required": ["title", "description"]
      },
      "PostUpdateRequest": {
        "type": "object",
        "properties": {
          "title": { "type": "string" },
          "description": { "type": "string" },
          "statusOpen": { "type": "boolean" }
        }
      },
      "PostResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "user_id": { "type": "string", "format": "uuid" },
          "title": { "type": "string" },
          "description": { "type": "string" },
          "score": { "type": "number" },
          "statusOpen": { "type": "boolean" },
          "created_at": { "type": "string", "format": "date-time" },
          "updated_at": { "type": "string", "format": "date-time" },
          "admin_post_block": { "type": "boolean" }
        },
        "required": ["title", "description", "statusOpen"]
      },
      "CommentRequest": {
        "type": "object",
        "properties": {
          "comment": { "type": "string" }
        },
        "required": ["comment"]
      },
      "CommentResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "user_id": { "type": "string", "format": "uuid" },
          "post_id": { "type": "string", "format": "uuid" },
          "comment": { "type": "string" },
          "score": { "type": "number" },
          "created_at": { "type": "string", "format": "date-time" },
          "updated_at": { "type": "string", "format": "date-time" },
          "admin_comment_block": { "type": "boolean" }
        }
      }
    }
  }
}
